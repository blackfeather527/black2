name: Fofa Domain Checker

on:
  schedule:
    - cron: '0 0 * * *'  # 每天运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  check-domains:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download latest Fofa-hack release
      run: |
        DOWNLOAD_URL=$(curl -s https://api.github.com/repos/Cl0udG0d/Fofa-hack/releases/latest | grep "browser_download_url.*fofa-hack_linux_amd64" | cut -d '"' -f 4)
        curl -L -o fofa $DOWNLOAD_URL
        chmod +x fofa

    - name: Run Fofa
      run: |
        mkdir -p /tmp/fofa_output
        ./fofa -k 'body="Sansui233"' -e 500 -o /tmp/fofa_output/domains.txt

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Check domains
      run: |
        python - <<EOF
        import requests
        import concurrent.futures
        from urllib3.exceptions import InsecureRequestWarning

        # 禁用不安全请求警告
        requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)

        def check_domain(domain):
            if not domain.startswith(('http://', 'https://')):
                domain = f"https://{domain}"
            try:
                response = requests.get(domain, timeout=10, verify=False)
                if "Sansui233" in response.text:
                    return domain
            except:
                pass
            return None

        with open('/tmp/fofa_output/domains.txt', 'r') as f:
            domains = [line.strip() for line in f]

        valid_domains = []
        with concurrent.futures.ThreadPoolExecutor(max_workers=20) as executor:
            future_to_domain = {executor.submit(check_domain, domain): domain for domain in domains}
            for future in concurrent.futures.as_completed(future_to_domain):
                result = future.result()
                if result:
                    valid_domains.append(result)

        with open('valid_domains.txt', 'w') as f:
            for domain in valid_domains:
                f.write(f"{domain}\n")
        EOF

    - name: Upload valid domains
      uses: actions/upload-artifact@v2
      with:
        name: valid-domains
        path: valid_domains.txt
